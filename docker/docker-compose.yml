version: '3.8'

services:
  app:
    build:
      dockerfile: docker/Dockerfile
      context: ../
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on: 
      migrate:
        condition: service_completed_successfully
      kafka:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_URL: ${KAFKA_URL}
  db:
    image: mysql:8.1.0
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - '3366:3306'
  migrate:
    image: migrate/migrate
    depends_on: 
      db:
        condition: service_healthy
    volumes:
      - ../migrations:/migrations
    command: ["-path", "/migrations/", "-database",  "mysql://${DATABASE_URL}", "up"]
  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"
    ports:
    - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    env_file:
    - kafka-variables.env
    depends_on:
    - zookeeper
    ports:
    - '9092:9092'
    - '8082:8082'
    - '8083:8083'